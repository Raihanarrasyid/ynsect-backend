// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int       @id @default(autoincrement())
  email    String    @unique
  name     String
  phoneNumber   String?   @unique
  address   String?
  carts    Cart[]
  orders   Order[]
  forums   Forum[]
  comments Comment[]
  saved    Saved[]
  likes    Like[]
}

model Product {
  id          Int     @id @default(autoincrement())
  name        String
  price       Int
  stock       Int
  description String?
  Cart        Cart[]
}

model Cart {
  id        Int     @id @default(autoincrement())
  userId    Int
  user      User    @relation(fields: [userId], references: [id])
  productId Int
  product   Product @relation(fields: [productId], references: [id])
  quantity  Int
  Order     Order[]
}

model Order {
  id         Int    @id @default(autoincrement())
  userId     Int
  user       User   @relation(fields: [userId], references: [id])
  cartId     Int
  cart       Cart   @relation(fields: [cartId], references: [id])
  totalPrice Int
  status     String
}

model Forum {
  id       Int       @id @default(autoincrement())
  userId   Int
  user     User      @relation(fields: [userId], references: [id])
  content  String
  comments Comment[]
  saved    Saved[]
  likes    Like[]
}

model Comment {
  id      Int    @id @default(autoincrement())
  userId  Int
  user    User   @relation(fields: [userId], references: [id])
  forumId Int
  forum   Forum  @relation(fields: [forumId], references: [id])
  content String
}

model Saved {
  id      Int     @id @default(autoincrement())
  userId  Int
  user    User    @relation(fields: [userId], references: [id])
  forumId Int
  forum   Forum   @relation(fields: [forumId], references: [id])
  status  Boolean
}

model Like {
  id      Int   @id @default(autoincrement())
  userId  Int
  user    User  @relation(fields: [userId], references: [id])
  forumId Int
  forum   Forum @relation(fields: [forumId], references: [id])
}
